import java.util.*;

class Solution {
    public int solution(int[][] triangle) {
        int n = triangle.length;

        // 마지막 행부터 거슬러 올라가며 계산
        for (int i = n - 2; i >= 0; i--) { // 끝에서 두 번째 행부터 시작
            for (int j = 0; j < triangle[i].length; j++) {
                // 현재 값에 아래 행의 두 값 중 더 큰 값을 더함
                triangle[i][j] += Math.max(triangle[i + 1][j], triangle[i + 1][j + 1]);
            }
        }

        // 삼각형 꼭대기에 최댓값이 저장됨
        return triangle[0][0];
    }

    public static void main(String[] args) {
        Solution sol = new Solution();

        int[][] triangle = {
            {7},
            {3, 8},
            {8, 1, 0},
            {2, 7, 4, 4},
            {4, 5, 2, 6, 5}
        };

        System.out.println(sol.solution(triangle)); // 출력: 30
    }
}
