import java.util.*;

class Solution {
    public int solution(int m, int n, int[][] puddles) {
        // DP 배열 생성
        int[][] dp = new int[n + 1][m + 1];

        // 물에 잠긴 지역 표시
        for (int[] puddle : puddles) {
            dp[puddle[1]][puddle[0]] = -1; // 물에 잠긴 곳을 -1로 표시
        }

        // 시작점 초기화
        dp[1][1] = 1; // 시작점 경로 개수는 1

        // DP 계산
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= m; j++) {
                if (dp[i][j] == -1) {
                    dp[i][j] = 0; // 물에 잠긴 곳은 경로 수를 0으로 설정
                    continue;
                }
                if (i > 1) dp[i][j] += dp[i - 1][j] % 1_000_000_007; // 위에서 오는 경우
                if (j > 1) dp[i][j] += dp[i][j - 1] % 1_000_000_007; // 왼쪽에서 오는 경우
                dp[i][j] %= 1_000_000_007; // 모듈러 연산
            }
        }

        return dp[n][m];
    }
}
